WITH

raw_customers AS (
   SELECT
       id AS customer_id,
       first_name,
       last_name,
       email_address,
       phone_number,
       created_at AS signup_date
   FROM {{ source('raw', 'customers') }}
   /* 1. you were referencing the orders tables here instead of customers
   2. do not reference the raw table directly from staging refer to the base or source model here */

   -- Select all customers regardless of status or signup date for simplicity
),


-- Get order data
raw_orders AS (
   SELECT
       o.id AS order_id,
       o.customer_id,
       o.order_date,
       o.order_status,
       o.total_amount
   FROM {{ source('raw', 'orders') }} o
   WHERE o.order_status IN ('completed', 'shipped')
),


order_totals AS (
   SELECT
       customer_id,
       COUNT(order_id) AS total_orders,
       SUM(total_amount) AS total_spent,
       MIN(order_date) AS first_order_date,
       MAX(order_date) AS last_order_date
   FROM raw_orders
   GROUP BY customer_id
   --I removed the raw_orders prefix, just to make it easier to read
),


   SELECT
       raw_customers.customer_id,
       CONCAT(raw_customers.first_name, ' ', raw_customers.last_name) AS full_name,
       raw_customers.email_address,
       raw_customers.phone_number,
       order_totals.total_orders,
       order_totals.total_spent,
       CASE
           WHEN order_totals.total_spent > 500 THEN 'Premium'
           ELSE 'Standard'
       END AS customer_type

       /* order_totals.first_order_date,
       order_totals.last_order_date */
       --commented the above out since it was not used in the final block
   FROM raw_customers
   LEFT JOIN order_totals ON raw_customers.customer_id = order_totals.customer_id


/*
The code block below is not neccesary as it can be consolidated into the one below
I have moved the customer type code to to the block above

The order by is costly as it is an extra resource, It is not needed as We can order in BI tool
*/

/*
SELECT
   customer_data.customer_id,
   customer_data.full_name,
   customer_data.email_address,
   customer_data.phone_number,
   customer_data.total_orders,
   customer_data.total_spent,
   CASE
       WHEN customer_data.total_spent > 500 THEN 'Premium'
       ELSE 'Standard'
   END AS customer_type
FROM customer_data
ORDER BY customer_data.total_spent DESC;
*/
